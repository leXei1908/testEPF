
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьТабличныйДокумент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть(Объект.ЗагружаемаяНоменклатура);
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	ЗаполненыНоменклатураДлинаКоличество = ЕстьДанные(Объект.ЗагружаемаяНоменклатура, ТабличныйДокумент);
			
	Если Не ЗаполненыНоменклатураДлинаКоличество Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Необходимо заполнить загружаемую номенклатуру и скопировать строки в таблицу из внешнего файла.'"));
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Состояние(НСтр("ru = 'Осуществляется сопоставление введенных данных с данными информационной базы. Пожалуйста подождите...'"),,,БиблиотекаКартинок.Информация32);
	
	ЗагрузитьДанныеВДокумент(ЗаполненыНоменклатураДлинаКоличество);
	
	Закрыть(ДанныеЗагрузки);
КонецПроцедуры

#КонецОбласти

#Область ПоискИСопоставлениеНоменклатуры

&НаСервере
Процедура ЗагрузитьДанныеВДокумент(ЕстьДанные)
	НомерСтолбца = 2;
	ДанныеЗагрузки.Очистить();
	Номенклатура = Объект.ЗагружаемаяНоменклатура;
	Ширина = Объект.Ширина;
	Пока ЕстьДанные Цикл
		ДанныеСтолбца = СтруктураСтолбца(Номенклатура, Ширина, ТабличныйДокумент, НомерСтолбца);
		НоваяСтрокаДанных = ДанныеЗагрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДанных, ДанныеСтолбца);
		
		НомерСтолбца = НомерСтолбца + 1;
		ЕстьДанные = ЕстьДанные(Номенклатура, ТабличныйДокумент, НомерСтолбца);
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьДанные(Номенклатура, ТабДок, НомерСтолбца = 2)
	Возврат ЗначениеЗаполнено(Номенклатура)
			И (ЗначениеЗаполнено(ТабДок.Область("R1C" + НомерСтолбца).Текст) 
			   Или ЗначениеЗаполнено(ТабДок.Область("R2C" + НомерСтолбца).Текст));
КонецФункции

&НаСервереБезКонтекста
Функция СтруктураСтолбца(Номенклатура, Ширина, ТабДок, НомерСтолбца)
	Структура = Новый Структура();
	Структура.Вставить("Номенклатура", Номенклатура);
	Длина = ТабДок.Область("R1C" + НомерСтолбца).Текст;
	КоличествоМест = ТабДок.Область("R2C" + НомерСтолбца).Текст;
	
	Если НЕ ЗначениеЗаполнено(Длина) Тогда
		Длина = 0;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(КоличествоМест) Тогда
		КоличествоМест = 0;
	КонецЕсли;
	
	Структура.Вставить("Длина", Число(Длина));
	Структура.Вставить("КоличествоМест", Число(КоличествоМест));
	Структура.Вставить("Ширина", Ширина);
	Структура.Вставить("КоличествоУпаковок", Структура.Длина * Структура.КоличествоМест * Структура.Ширина);
	Структура.Вставить("Количество", Структура.КоличествоУпаковок);
	Структура.Вставить("СтавкаНДС", Перечисления.СтавкиНДС.ПустаяСсылка());
	Возврат Структура;
КонецФункции

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ИнициализироватьТабличныйДокумент();
	ВнешняяОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	МакетЗаполненияПоВнешнемуИсточнику = ВнешняяОбработкаОбъект.ПолучитьМакет("МакетЗагрузкиДанных");
	ТабличныйДокумент.Очистить();
	
	ОбластьТовары = МакетЗаполненияПоВнешнемуИсточнику.ПолучитьОбласть("ОбластьДлинаЛиста");
	ТабличныйДокумент.Вывести(ОбластьТовары);
	ОбластьТовары = МакетЗаполненияПоВнешнемуИсточнику.ПолучитьОбласть("ОбластьКоличествоЛистов");
	ТабличныйДокумент.Присоединить(ОбластьТовары);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначения) Экспорт
	Если ИдентификаторКоманды = "ЗаполнитьЧерепицу" Тогда
		ОповещениеПослеЗакрытия = Новый ОписаниеОповещения("ДобавитьРазмерыВДокумент", 
															ЭтотОбъект);
		ОткрытьФорму(ЭтаФорма.ИмяФормы,
					 , 
					 ВладелецФормы.ИмяФормы,
					 ,
					 ,
					 , 
					 ОповещениеПослеЗакрытия, 
					 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРазмерыВДокумент(РезультатЗакрытия, Параметры) Экспорт
	Если ТипЗнч(РезультатЗакрытия) = Тип("ДанныеФормыКоллекция") Тогда
		ОбъектФормы = ВладелецФормы.Объект;
		ВладелецФормы.Модифицированность = Истина;
		
		Товары = ОбъектФормы.Товары;
		Для Каждого СтрокаДанных Из РезультатЗакрытия Цикл
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			СтруктураНДС = ТоварыНоменклатураПриИзменении(НоваяСтрока, ОбъектФормы, ВладелецФормы);
			НоваяСтрока.СтавкаНДС = СтруктураНДС.СтавкаНДС;
		КонецЦикла;
	КонецЕсли;
	
	РассчитатьИтоговыеПоказателиЗаказа(ВладелецФормы);
	
//	ВладелецФормы.Объект.Записать();
КонецПроцедуры

&НаКлиенте
Функция ТоварыНоменклатураПриИзменении(ТекущаяСтрока, ОбъектФормы, ВладелецФормы)
	
	//ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ОбъектФормы);
	
	СтруктураДействий = Новый Структура;
//	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
//	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
//	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
//	СтруктураДействий.Вставить("ПроверитьЗаполнитьСклад", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСкладаВСтрокеТЧ(ОбъектФормы, ВладелецФормы.СкладГруппа));
//	Если ВладелецФормы.ИспользоватьСоглашенияСКлиентами И ЗначениеЗаполнено(ОбъектФормы.Соглашение) Тогда
//		СтруктураДействий.Вставить("ЗаполнитьУсловияПродаж", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияУсловийПродажВСтрокеТЧ(ОбъектФормы));
//	Иначе
//		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныВСтрокеТЧ(ОбъектФормы));
//	КонецЕсли;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", ОбъектФормы.НалогообложениеНДС);
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", ОбъектФормы.ВернутьМногооборотнуюТару);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
//	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Истина));
//	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Истина));
//	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
//	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
//	СтруктураДействий.Вставить("ЗаполнитьПризнакВариантОформленияПродажи", Новый Структура("Номенклатура", "ВариантОформленияПродажи"));
//	СтруктураДействий.Вставить("ЗаполнитьСодержание", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСодержанияУслугиВСтрокеТЧ(ОбъектФормы, Ложь));
	//СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
//	СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", ОбъектФормы.ВернутьМногооборотнуюТару);
//	СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары", ОбъектФормы.ВернутьМногооборотнуюТару);
	//СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", Новый Структура("Склад, ПараметрыУказанияСерий", ТекущаяСтрока.Склад, ПараметрыУказанияСерий));
	//СтруктураДействий.Вставить("ПроверитьЗаполнитьОбеспечение", Новый Структура("ЗаполнитьОбособленно", ЗаполнитьОбособленно)); 
	
//	СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
//		ВладелецФормы.ИмяФормы, "Товары"));
	
	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("СтавкаНДС", ТекущаяСтрока.СтавкаНДС);
	СтруктураСтроки.Вставить("Сумма", ТекущаяСтрока.СтавкаНДС);
	СтруктураСтроки.Вставить("СуммаНДС", ТекущаяСтрока.СтавкаНДС);
	СтруктураСтроки.Вставить("СуммаСНДС", ТекущаяСтрока.СтавкаНДС);

//	ТаблицаТовары = ВладелецФормы.Объект.Товары;
	ТоварыНоменклатураПриИзмененииНаСервере(СтруктураСтроки, СтруктураДействий);
	Возврат СтруктураСтроки;
//	ВладелецФормы.Объект.Товары = ТаблицаТовары;
КонецФункции

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СтруктураСтроки, СтруктураДействий)
//	ТекущаяСтрока = ТаблицаТовары.НайтиПоИдентификатору(ИдентификаторСтроки);
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтруктураСтроки, СтруктураДействий, Неопределено);
//	СтруктураИтогов = Новый Структура("РазличныеСклады, ЕстьРаботы, ЕстьИзЗаказов, ТолькоНеТребуется");
//	ОбойтиТаблицуОбновитьЗависимыеРеквизиты(ВладелецФормы, СтруктураИтогов);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказателиЗаказа(Форма)
	
	// Заполнение итогов по таблице "Товары"
	
	КоллекцияТовары = Форма.Объект.Товары;

	Форма.СуммаЗаказаноСЗалоговойТарой = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		КоллекцияТовары.Итог("СуммаСНДС") - КоллекцияТовары.Итог("СуммаСНДСОтменено"),
		КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары"));
	Форма.СуммаЗаказано     = КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары");
	Форма.СуммаЗалогаЗаТару = ?(Форма.Объект.ТребуетсяЗалогЗаТару,(КоллекцияТовары.Итог("СуммаСНДС") - КоллекцияТовары.Итог("СуммаСНДСОтменено"))
			- (КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары")),0);
	Форма.СуммаНДСЗаказано  = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		КоллекцияТовары.Итог("СуммаНДС") - КоллекцияТовары.Итог("СуммаНДСОтменено"),
		КоллекцияТовары.Итог("СуммаНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаНДСОтмененоБезВозвратнойТары"));
	Форма.СуммаАвтоСкидки   = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		КоллекцияТовары.Итог("СуммаАвтоматическойСкидки") - КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиОтменено"),
		КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиОтмененоБезВозвратнойТары"));
	Форма.СуммаРучнойСкидки = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		КоллекцияТовары.Итог("СуммаРучнойСкидки") - КоллекцияТовары.Итог("СуммаРучнойСкидкиОтменено"),
		КоллекцияТовары.Итог("СуммаРучнойСкидкиБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаРучнойСкидкиОтмененоБезВозвратнойТары"));
	Форма.СуммаСкидки       = Форма.СуммаАвтоСкидки + Форма.СуммаРучнойСкидки;
	Форма.СуммаОтменено     = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		КоллекцияТовары.Итог("СуммаСНДСОтменено"),
		КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары"));
	
	Если КоллекцияТовары.Итог("СуммаСНДСОтменено") = КоллекцияТовары.Итог("СуммаСНДС") Тогда
		Форма.ВсеСтрокиОтменены = Истина;
	Иначе
		Форма.ВсеСтрокиОтменены = Ложь;
	КонецЕсли;
	
	СуммаЗаказано = ?(Форма.Объект.ТребуетсяЗалогЗаТару,
		КоллекцияТовары.Итог("Сумма") - КоллекцияТовары.Итог("СуммаОтменено"),
		КоллекцияТовары.Итог("СуммаБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаОтмененоБезВозвратнойТары"));
	
	Если СуммаЗаказано > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентСкидки       = Форма.ПроцентАвтоСкидки + Форма.ПроцентРучнойСкидки;
	ИначеЕсли Форма.СуммаСкидки > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентСкидки       = 100;
	Иначе
		Форма.ПроцентАвтоСкидки   = 0;
		Форма.ПроцентРучнойСкидки = 0;
		Форма.ПроцентСкидки       = 0;
	КонецЕсли;
	
	// Заполнение итогов по этапам оплаты
	
	Форма.СуммаАвансаДоОбеспечения = 0;
	Форма.СуммаПредоплатыДоОтгрузки = 0;
	Форма.СуммаКредитаПослеОтгрузки = 0;
	Форма.ПроцентАвансаДоОбеспечения = 0;
	Форма.ПроцентПредоплатыДоОтгрузки = 0;
	Форма.ПроцентКредитаПослеОтгрузки = 0;
	
	СоответствиеВариантовОплаты = Новый Соответствие;
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения"),
		Новый Структура("Сумма, Проценты", "СуммаАвансаДоОбеспечения", "ПроцентАвансаДоОбеспечения"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки"),
		Новый Структура("Сумма, Проценты", "СуммаПредоплатыДоОтгрузки", "ПроцентПредоплатыДоОтгрузки"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки"),
		Новый Структура("Сумма, Проценты", "СуммаКредитаПослеОтгрузки", "ПроцентКредитаПослеОтгрузки"));
	
	Для Каждого ТекСтрока Из Форма.Объект.ЭтапыГрафикаОплаты Цикл
		ИменаЭлементов = СоответствиеВариантовОплаты[ТекСтрока.ВариантОплаты];
		Если ИменаЭлементов <> Неопределено Тогда
			Форма[ИменаЭлементов.Сумма] = Форма[ИменаЭлементов.Сумма] + ТекСтрока.СуммаПлатежа
				+ ?(Форма.Объект.ТребуетсяЗалогЗаТару, ТекСтрока.СуммаЗалогаЗаТару, 0);
		КонецЕсли;
	КонецЦикла;
	
	СуммаВсегоПоЭтапам = Форма.СуммаАвансаДоОбеспечения + Форма.СуммаПредоплатыДоОтгрузки + Форма.СуммаКредитаПослеОтгрузки;
	Если СуммаВсегоПоЭтапам <> 0 Тогда
		Форма.ПроцентАвансаДоОбеспечения  = (Форма.СуммаАвансаДоОбеспечения/СуммаВсегоПоЭтапам)*100;
		Форма.ПроцентПредоплатыДоОтгрузки = (Форма.СуммаПредоплатыДоОтгрузки/СуммаВсегоПоЭтапам)*100;;
		Форма.ПроцентКредитаПослеОтгрузки = (Форма.СуммаКредитаПослеОтгрузки/СуммаВсегоПоЭтапам)*100;
	КонецЕсли;
	
	// Выбор странцицы отображения НДС
	
	Если Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС")
		ИЛИ Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД") Тогда
		
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
		
	Иначе
		
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти